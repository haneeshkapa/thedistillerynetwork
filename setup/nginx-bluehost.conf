# Nginx Configuration for Bluehost SMS Bot Deployment
# Place this in: /etc/nginx/conf.d/sms-bot.conf

server {
    listen 80;
    server_name yourdomain.com www.yourdomain.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name yourdomain.com www.yourdomain.com;
    
    # SSL Configuration (automatically configured by certbot)
    ssl_certificate /etc/letsencrypt/live/yourdomain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/yourdomain.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';";
    
    # Logging
    access_log /var/log/nginx/sms-bot-access.log;
    error_log /var/log/nginx/sms-bot-error.log;
    
    # Main application proxy
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffers 16 4k;
        proxy_buffer_size 2k;
    }
    
    # Webhook endpoint (critical for SMS) - no caching, high priority
    location /webhook {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # No caching for webhooks
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        
        # Increased timeout for webhook processing
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Rate limiting for webhook (protect against spam)
        limit_req zone=webhook_limit burst=10 nodelay;
    }
    
    # Admin panel (secure with optional IP restriction)
    location /admin {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Optional: Restrict admin access to specific IPs
        # Uncomment and add your IP addresses:
        # allow 192.168.1.0/24;    # Local network
        # allow your.ip.address.here;  # Your office IP
        # deny all;
        
        # Admin-specific security headers
        add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";
    }
    
    # API endpoints (with rate limiting)
    location /api {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Rate limiting for API endpoints
        limit_req zone=api_limit burst=20 nodelay;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
    }
    
    # Health check endpoint (no logging for monitoring)
    location /health {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        access_log off;  # Don't log health checks
        
        # Quick timeout for health checks
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # Static files (if any) with caching
    location /static {
        alias /var/www/html/sms-bot/public;
        expires 30d;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Gzip compression for static files
        gzip_static on;
        gzip_vary on;
    }
    
    # Favicon
    location = /favicon.ico {
        alias /var/www/html/sms-bot/public/favicon.ico;
        expires 7d;
        access_log off;
    }
    
    # Robots.txt
    location = /robots.txt {
        alias /var/www/html/sms-bot/public/robots.txt;
        expires 7d;
        access_log off;
    }
    
    # Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(env|config|log)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Rate limiting zones (add this outside server blocks, at the top)
http {
    # Rate limiting for webhooks (100 requests per minute)
    limit_req_zone $binary_remote_addr zone=webhook_limit:10m rate=100r/m;
    
    # Rate limiting for API endpoints (500 requests per minute)
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=500r/m;
    
    # General rate limiting (1000 requests per minute)
    limit_req_zone $binary_remote_addr zone=general_limit:10m rate=1000r/m;
}